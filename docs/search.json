[
  {
    "objectID": "day-27-28.html",
    "href": "day-27-28.html",
    "title": "Daily Assignment 27 & 28",
    "section": "",
    "text": "library(osmdata)\n\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(raster)\n\nLoading required package: sp\n\n\n\nAttaching package: 'raster'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nlibrary(terra)\n\nterra 1.8.42\n\nlibrary(ggplot2)\n\nfc = AOI::geocode(\"Fort Collins\", bbox = TRUE)\nfoco_rivers &lt;- osmdata::opq(st_bbox(st_transform(fc,4326))) |&gt; \n  add_osm_feature(\"waterway\") |&gt; \n  osmdata_sf()\n\nDefine River Object\n\nriver_lines &lt;- foco_rivers$osm_lines\n\npoudre_river &lt;- river_lines |&gt; \n  dplyr::filter(name == \"Cache la Poudre River\")\n\npoudre_merged &lt;- st_union(poudre_river)\npoudre_sf &lt;- st_as_sf(data.frame(geometry = poudre_merged), crs = st_crs(poudre_river))  \n  \nriver_length_m &lt;- st_length(poudre_sf)\n\npoudre_pts &lt;- st_cast(poudre_sf, \"POINT\")\n\nDefine DEM Object\n\ndem &lt;- rast('https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/foco-elev-cm.tif')\n\nExtract River Profile\n\nriver_points &lt;- as.points(dem, values = TRUE)\nelevation_values &lt;- extract(dem, river_points)\n\nriver_df &lt;- as.data.frame(river_points)\nresult &lt;- bind_cols(river_df, elevation_values[,-1])\n\nNew names:\n• `` -&gt; `...2`\n\nresult &lt;- result |&gt;\n  mutate(ID = seq_len(n()))\n\nCompute Sinuosity\n\n#first_point &lt;- poudre_sf[1, ]\n#last_point  &lt;- poudre_sf[nrow(poudre_sf), ]\n#distance &lt;- st_distance(first_point, last_point)\n\nriver_sf &lt;- st_as_sf(river_points)\nfirst_point &lt;- river_sf[1, ]\nlast_point  &lt;- river_sf[nrow(river_sf), ]\ndistance &lt;- st_distance(first_point, last_point)\nprint(distance)\n\nUnits: [m]\n         [,1]\n[1,] 27662.16\n\nsinuosity = river_length_m/distance\n\nThese calculations gave me a sinuosity of 6.12. This value indicates an extremely high level of curving compared to a straight line. However, this does make sense for the Poudre River, as the river is generally known for its windiness and there are very few straight parts, even on the North Fork.\nCompute Slope\n\nelev_inlet  &lt;- result$dem[1] / 100\nelev_outlet &lt;- result$dem[nrow(result)] / 100\nslope &lt;- (elev_inlet - elev_outlet) / river_length_m\nprint(slope)\n\n0.0009150139 [1/m]\n\n\nThe slope of the Poudre river is 0.0009 meters, or a 0.09% slope.\nMap Profile\n\nggplot(result, aes(x = ID, y = dem)) +\n  geom_line(color = \"steelblue\", size = 1) +\n  geom_point(color = \"darkred\", size = 2) +\n  labs(\n    title = \"Elevation Profile Along the River\",\n    x = \"Point ID (From Inlet to Outlet)\",\n    y = \"Elevation (cm)\"\n  ) +\n  theme_minimal() \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\nggplot(river_sf) +\n  geom_sf(aes(color = dem), size = 2) + \n  scale_color_viridis_c(name = \"Elevation (cm)\", option = \"plasma\") +\n  labs(\n    title = \"Spatial River Profile\",\n    subtitle = \"River points colored from high to low elevation\",\n  ) +\n  theme_minimal()"
  }
]